name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean package -DskipTests -pl product-service,inventory-service,order-service

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Product Service Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./product-service
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/product-service:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/product-service:${{ github.sha }}

    - name: Build and push Inventory Service Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./inventory-service
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/inventory-service:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/inventory-service:${{ github.sha }}

    - name: Build and push Order Service Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./order-service
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/order-service:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/order-service:${{ github.sha }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Deploy to Kubernetes
      run: |
        # Update image tags in manifests
        sed -i "s|ghcr.io/${{ env.IMAGE_NAME }}/product-service:latest|ghcr.io/${{ env.IMAGE_NAME }}/product-service:${{ github.sha }}|g" k8s/product-service.yaml
        sed -i "s|ghcr.io/${{ env.IMAGE_NAME }}/inventory-service:latest|ghcr.io/${{ env.IMAGE_NAME }}/inventory-service:${{ github.sha }}|g" k8s/inventory-service.yaml
        sed -i "s|ghcr.io/${{ env.IMAGE_NAME }}/order-service:latest|ghcr.io/${{ env.IMAGE_NAME }}/order-service:${{ github.sha }}|g" k8s/order-service.yaml
        
        # Apply manifests
        kubectl apply -f k8s/mongodb.yaml
        kubectl apply -f k8s/mysql.yaml
        kubectl apply -f k8s/product-service.yaml
        kubectl apply -f k8s/inventory-service.yaml
        kubectl apply -f k8s/order-service.yaml
        
        # Wait for deployments
        kubectl rollout status deployment/product-service --timeout=300s
        kubectl rollout status deployment/inventory-service --timeout=300s
        kubectl rollout status deployment/order-service --timeout=300s

    - name: Verify deployment
      run: |
        kubectl get pods,svc
        kubectl get hpa 